# 2017年3月29日 星期三
# go-ini v0.2.0 测试
# V0.2.8 测试 -> fullParse 作为实验性功能，但是保留，但不推荐使用。 算法设计上难以实现
# 1/ 简单测试
firstname Joshua
lastname = Conero

# 2/ 多值测试

likes = reading,music,movies

travel = {
    Wuhang
    Guangzhou
    Guiyang
    Chongqing
    Zhuhai
}

tavelZh = {
    武汉  ,
    广州  ,
    贵阳
    重庆  ,
    珠海
}

area = {
    name = v.0.8 项目测试资源文件
    slArr = k1 , s1 , s2
    mlArr = {
        k1
        s1
        s2
    }
    test = {
        tname = v.0.8 项目测试资源文件
        tslArr = k1 , s1 , s2
        tmlArr = {
            k1
            s1
            s2
        }
    }
}

# 3/ 作用域
test = {
    name = 单级测试-当前值只支持单级
    date = 2017年3月29日 星期三 / 截止当前
    bug  = 目前字符排除 - 空格等
    version = 0.2.0
    remark = 版本测试     
    '''
    array = {
        8
        7
        5
        6
        3
    }
    '''
    # u = 多注释测试- 交叉测试
    brximl = BRXIML
}

fuck = {
    4
    5
    6
    6
    8
    8
}

# 4/ 多行注释
'''
    >> 多行注释测试
    >> 更新内容：
            ini -> json
    >> 计划
            join -> ini
    非法模拟
    mline = Y
    >>2017年4月5日 星期三 计划
    array = {
        key = {
            复杂
        }
        key2 = {
            复杂结构
        }
    }
    test = {
        test = {}
        t = {            
        }
    }
'''

# 5/ 多重结构
'''
    >> 2017年4月5日 星期三 - 重分析
    place -> area
    place -> other -> other ->
    place -> error -> error -> error ->...
    
    ~ 目录类型法
        其他>>     Conero/C Array []string, Marry/M   map[string]interface{}
        Brximl      map[string]string{}
        Zaueen      map[string]C{}
        Emma        map[string]M{}
    
    type kClass []string    基础类型
    - 键数组
    kClassArr   []kClass   级数      =>  
            [place:[
                1.    area
                2.    other:[...]
                3.    ...
            ]]
            ^ 二维数组
            [
                [place area]
                [place other]
                [place other other]
                [place error]
                [place error error]
                [place error error error]
            ]
            ^ 二维数组法转一维                  <>   map[string]interface{}
            1. [place area]         => area []string{}  => place map [] area{}
            2. [place other]        => other map[]string{}
    vClass      map[]interface{}
    vClassArr   []vClass{}
    sArr        []string
    sMap        map[string]string
    


    >> 2017年4月9日 星期日
    1. place        map {place : area = [,,,] } 
    2. place        map {place : area = [],name= Ty..,map{other:}}
    Cdt <- place: area = []
    -- 逻辑判断转折点
'''

# 
'''
thrid = {
    server = {
        port = 8080
        host = localhost
        name = Joshua Test
    }    
    file = name
    part = {
        file = name
        server = {
            port = 8080
            host = localhost
            name = Joshua Test
        }
    }
}
'''


place = {
    yang = popo , 5 , 8
    area = {
        星际
        地球
        亚洲
        中国
        贵州        
    }
    name = TYPE-Go-Start
    other = {
        name = 多重json处理
        start = 2017年3月30日 星期四
        other = {
            name = Guiyang
            what = what
        }
    }
    '''
    error = {
        name = 之前预想算法不可行
        other = 采用如php读取文件基本算法
        date = 2017年4月5日 星期三
        error = {
            name = 3
            error = {
                name = 4
                other = ...
            }
        }
    }
    '''
}
'''
V0.2.8 全解析构思验证
    1.>>
    []vClass{} = 
        [
            place = Map[yang,area,name]     => __class__ => place
            other = Map[name,start]         => __class__ => place/other
            other = Map[name,whart]         => __class__ => place/other/other
        ]

    2.>>
    map[string]vClass{}
        [
            place => Map[yang,area,name]
            place_other => Map[name,start]
            place_other_other => Map[name,whart]
        ]

'''


'''
    >> 2017年4月9日 星期日 纯多级式
    [lily test test test test]
'''
lily = {
    test = {
        test = {
            test = {
                test = {
                    like = Emma
                    toll = Emma
                    lastname = wang
                }
            }
        }
    }
}
end = Y
end_desc = 结束标志

'''
    一级key   10 个

'''